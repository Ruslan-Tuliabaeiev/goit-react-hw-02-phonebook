{"version":3,"sources":["App.js","index.js","components/phonebook.module.css"],"names":["App","state","contacts","name","number","handleChange","e","currentTarget","value","setState","handleNumberChange","target","handleSubmit","preventDefault","console","log","reset","onSubmit","this","className","style","blockList","span","type","pattern","title","required","onChange","buttonSudmit","onClick","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAUMA,E,4MACJC,MAAQ,CACNC,SAAU,GAGVC,KAAM,GACNC,OAAQ,I,EAQRC,aAAgB,SAAAC,GACpB,MAAsBA,EAAEC,cAAjBJ,EAAP,EAAOA,KAAMK,EAAb,EAAaA,MACb,EAAKC,SAAL,eAAgBN,EAAOK,K,EAKrBE,mBAAsB,SAAAJ,GACpB,EAAKG,SAAS,CAAEL,OAAQE,EAAEK,OAAOH,S,EAIrCI,aAAe,SAAAN,GACbA,EAAEO,iBACFC,QAAQC,IAAI,EAAKd,OAEjB,EAAKe,S,EAIPA,MAAQ,WACN,EAAKP,SAAS,CAACN,KAAM,GAAIC,OAAQ,M,4CASlC,WAEE,OAEH,qCACA,2CACE,uBAAOa,SAAUC,KAAKN,aAAtB,UACD,sBAAKO,UAAWC,IAAMC,UAAtB,UACA,sBAAMF,UAAWC,IAAME,KAAvB,mBACE,gCACA,uBACAC,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EAEVlB,MAAOU,KAAKjB,MAAME,KAElBwB,SAAUT,KAAKb,oBAQf,sBAAKc,UAAWC,IAAMC,UAAtB,UACA,sBAAMF,UAAWC,IAAME,KAAvB,qBAEA,gCACA,uBACEC,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRlB,MAAOU,KAAKjB,MAAMG,OACpBuB,SAAUT,KAAKb,iBAXf,OArBC,IAqCe,oCAAM,wBAASc,UAAWC,IAAMQ,aAAcL,KAAK,SAASM,QAASX,KAAKN,aAApE,yBAAN,UAEhB,iD,GAzFiBkB,aAkHF9B,ICtHhB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,UAAY,6BAA6B,KAAO,wBAAwB,aAAe,mC","file":"static/js/main.88e45645.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\n\n// import shortid from 'shortid';\n//import { nanoid } from 'nanoid'\n //import { NewContacts } from './components/NewContacts';\nimport { Contacts } from './components/Contacts';\nimport style from './components/phonebook.module.css'\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n\n    ],\n    name: '',\n    number: '',\n    };\n\n\n\n    // nameInputId = shortid.generate();\n\n\n    handleChange  = e => {\nconst {name, value} = e.currentTarget;\nthis.setState({[name]: value});\n    }\n\n\n\n  handleNumberChange  = e => {\n    this.setState({ number: e.target.value });\n   \n};\n\nhandleSubmit = e => {\n  e.preventDefault();\n  console.log(this.state);\n //  this.props.onSubmit(this.setState);\n  this.reset();\n}\n \n\nreset = () => {\n  this.setState({name: '', number: '' })\n}\n\n////////////\n  \n\n///////\n\n/////////////\n render() {\n \n   return (\n     \n<>\n<h1>Phonebook</h1>\n  <form  onSubmit={this.handleSubmit}>\n <div className={style.blockList}>\n <span className={style.span}>Neme:</span> \n   <label >\n   <input\n   type=\"text\"\n   name=\"name\"\n   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n   title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n   required\n\n value={this.state.name}\n\n onChange={this.handleChange }\n\n\n/>\n\n </label>\n  \n </div>\n <div className={style.blockList}>\n <span className={style.span}>Number:</span> \n\n <label>\n <input\n   type=\"tel\"\n   name=\"number\"\n   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n   title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n   required\n   value={this.state.number}\n onChange={this.handleChange}\n\n \n\n />\n </label> </div> <div> <button  className={style.buttonSudmit} type='submit' onClick={this.handleSubmit}>Add contact</button> </div>\n </form>\n <h2>Contacts</h2>\n\n\n\n\n    {/* <Contacts \ncontacts={this.handleSubmit()}\n/>   */}\n\n\n\n</>\n)\n \n }\n\n}\n\n\n\n\n\n\n\n\n export default App;\n\n//==========<Form/>\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitalsreportWebVitals();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"phonebook_block__1eX54\",\"blockList\":\"phonebook_blockList__1E0tW\",\"span\":\"phonebook_span__p0fGn\",\"buttonSudmit\":\"phonebook_buttonSudmit__zy00W\"};"],"sourceRoot":""}